services:
  web:
    command: gunicorn -k uvicorn.workers.UvicornWorker app.main:app -b 0.0.0.0:8000 --workers 4
    restart: always
    image: ghcr.io/vitalyionov/learn-language-server:${IMAGE_TAG:-latest}
    volumes:
      - ./static/images:/app/static/images
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend_net

  db:
    image: postgres:15
    restart: always
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - backend_net
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h 127.0.0.1" ]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - certbot-www:/var/www/certbot
      - letsencrypt:/etc/letsencrypt
    depends_on: [web]
    networks:
      - backend_net

  netdata:
    image: netdata/netdata
    container_name: netdata
    hostname: learn-language
    ports:
      - "19999:19999"
    cap_add:
      - SYS_PTRACE
      - SYS_ADMIN
    security_opt:
      - apparmor:unconfined
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
      - PGID=999
      - NETDATA_DISABLE_CLOUD=1
    volumes:
      - netdataconfig:/etc/netdata
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
      - /etc/os-release:/host/etc/os-release:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker:/var/lib/docker:ro
      - ./netdata-config:/etc/netdata/go.d:ro
    restart: always
    networks:
      - backend_net


networks:
  backend_net:
    driver: bridge

volumes:
  pg_data: { }
  certbot-www: { }
  letsencrypt: { }
  netdataconfig: { }
  netdatalib: { }
  netdatacache: { }
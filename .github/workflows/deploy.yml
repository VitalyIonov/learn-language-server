name: Deploy to Server

on:
  push:
    branches:
      - master

permissions:
  contents: read
  packages: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: vitalyionov
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: true
          target: prod
          tags: |
            ghcr.io/vitalyionov/learn-language-server:latest
            ghcr.io/vitalyionov/learn-language-server:${{ github.sha }}

      - name: Show workspace files
        run: |
          pwd
          ls -la
          ls -la ./nginx/conf.d

      - name: Copy files to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: |
            ./docker-compose.yml
            ./docker-compose.prod.yml
            ./docker-compose.monitor.yml
            ./nginx/conf.d/prod.conf
          target: /opt/learn-language/
          overwrite: true
          debug: true

      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /opt/learn-language
            echo ${{ secrets.GHCR_PAT }} | docker login ghcr.io -u vitalyionov --password-stdin
            docker compose -f docker-compose.monitor.yml up -d
            IMAGE_TAG=${{ github.sha }} docker compose -f docker-compose.yml -f docker-compose.prod.yml pull
            IMAGE_TAG=${{ github.sha }} docker compose -f docker-compose.yml -f docker-compose.prod.yml up -d --no-deps --force-recreate
            docker system prune -f

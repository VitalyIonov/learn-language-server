"""empty message

Revision ID: 87d29ee5dcee
Revises: 
Create Date: 2025-08-20 15:36:25.137527

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '87d29ee5dcee'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('assets',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'READY', name='assetstatus'), nullable=False),
    sa.Column('mime_type', sa.String(length=100), nullable=False),
    sa.Column('size_bytes', sa.Integer(), nullable=False),
    sa.Column('width', sa.Integer(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('file_key', sa.String(length=512), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('levels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('alias', sa.String(), nullable=False),
    sa.Column('value', sa.Integer(), server_default='0', nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_levels_alias'), 'levels', ['alias'], unique=True)
    op.create_index(op.f('ix_levels_name'), 'levels', ['name'], unique=True)
    op.create_table('question_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Enum('TEXT', 'IMAGE', name='questiontypename'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_question_types_name'), 'question_types', ['name'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('auth_provider', sa.Enum('GOOGLE', 'EMAIL', name='authprovider'), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'USER', name='userrole'), server_default=sa.text("'USER'"), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('image_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['image_id'], ['assets.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_categories_name'), 'categories', ['name'], unique=True)
    op.create_table('levels_question_types',
    sa.Column('level_id', sa.Integer(), nullable=False),
    sa.Column('question_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['level_id'], ['levels.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['question_type_id'], ['question_types.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('level_id', 'question_type_id')
    )
    op.create_table('categories_progress_info',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('level_id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Integer(), server_default='0', nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['level_id'], ['levels.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'category_id', 'level_id')
    )
    op.create_table('definitions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('TEXT', 'IMAGE', name='questiontypename'), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('level_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['level_id'], ['levels.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_definitions_type'), 'definitions', ['type'], unique=False)
    op.create_table('meanings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('level_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['level_id'], ['levels.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_meanings_name'), 'meanings', ['name'], unique=True)
    op.create_table('definitions_meanings',
    sa.Column('definition_id', sa.Integer(), nullable=False),
    sa.Column('meaning_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['definition_id'], ['definitions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['meaning_id'], ['meanings.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('definition_id', 'meaning_id')
    )
    op.create_table('definitions_progress_info',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('meaning_id', sa.Integer(), nullable=False),
    sa.Column('definition_id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Integer(), server_default='0', nullable=False),
    sa.ForeignKeyConstraint(['definition_id'], ['definitions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['meaning_id'], ['meanings.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'meaning_id', 'definition_id')
    )
    op.create_table('meanings_progress_info',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('meaning_id', sa.Integer(), nullable=False),
    sa.Column('level_id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Integer(), server_default='0', nullable=False),
    sa.ForeignKeyConstraint(['level_id'], ['levels.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['meaning_id'], ['meanings.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'meaning_id', 'level_id')
    )
    op.create_table('questions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('meaning_id', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('level_id', sa.Integer(), nullable=True),
    sa.Column('correct_definition_id', sa.Integer(), nullable=True),
    sa.Column('chosen_definition_id', sa.Integer(), nullable=True),
    sa.Column('is_correct', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['chosen_definition_id'], ['definitions.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['correct_definition_id'], ['definitions.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['level_id'], ['levels.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['meaning_id'], ['meanings.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('definitions_questions',
    sa.Column('definition_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['definition_id'], ['definitions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('definition_id', 'question_id')
    )
    op.create_table('users_info',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('current_question_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['current_question_id'], ['questions.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users_info')
    op.drop_table('definitions_questions')
    op.drop_table('questions')
    op.drop_table('meanings_progress_info')
    op.drop_table('definitions_progress_info')
    op.drop_table('definitions_meanings')
    op.drop_index(op.f('ix_meanings_name'), table_name='meanings')
    op.drop_table('meanings')
    op.drop_index(op.f('ix_definitions_type'), table_name='definitions')
    op.drop_table('definitions')
    op.drop_table('categories_progress_info')
    op.drop_table('levels_question_types')
    op.drop_index(op.f('ix_categories_name'), table_name='categories')
    op.drop_table('categories')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_question_types_name'), table_name='question_types')
    op.drop_table('question_types')
    op.drop_index(op.f('ix_levels_name'), table_name='levels')
    op.drop_index(op.f('ix_levels_alias'), table_name='levels')
    op.drop_table('levels')
    op.drop_table('assets')
    # ### end Alembic commands ###
